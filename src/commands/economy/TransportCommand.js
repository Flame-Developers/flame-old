/* eslint-disable no-case-declarations */
const { MessageEmbed } = require('discord.js');
const { getHelp } = require('../../utils/Functions');
const FlameCommand = require('../../structures/FlameCommand');

class TransportCommand extends FlameCommand {
  constructor() {
    super('transport', {
      description: '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞–º–∏.',
      category: 'economy',
      usage: 'transport <add/remove/list/buy>',
      aliases: [],
      examples: [
        'f.transport add –í–∞–≥–æ–Ω–µ—Ç–∫–∞ carriage 700 mine',
        'f.transport buy carriage',
      ],
    });
  }

  async run(message, args) {
    const guild = await message.client.database.collection('guilds').findOne({ guildID: message.guild.id });
    const data = await message.client.database.collection('guildusers').findOne({ guildID: message.guild.id, userID: message.author.id });
    const option = args[0];

    switch (option) {
      case 'list':
        message.channel.send(
          new MessageEmbed()
            .setAuthor('–°–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω–æ–≥–æ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞', 'https://www.pikpng.com/pngl/b/80-809078_car-emoji-png-icon-car-emoji-clipart.png')
            .setColor('ffa500')
            .setDescription(
              guild.transport?.length
                ? guild.transport.map((x) => `**${x.name}** (\`${x.key}\`) | ${x.price}${guild.currency} | ${data.ownedTransport?.includes(x.key) ? 'üîì' : 'üîí'}`)
                : '–°–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω–æ–≥–æ –¥–ª—è –ø–æ–∫—É–ø–∫–∏ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞ –Ω–∞ –¥–∞–Ω–Ω–æ–º —Å–µ—Ä–≤–µ—Ä–µ –ø—É—Å—Ç.',
            )
            .addField('–ü–æ–¥—Å–∫–∞–∑–∫–∞', `–¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç –∏–Ω–æ–≥–¥–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –Ω–µ–∫–æ—Ç–æ—Ä—ã—Ö –∫–æ–º–∞–Ω–¥. –ö—É–ø–∏—Ç—å –µ–≥–æ –≤—ã –º–æ–∂–µ—Ç–µ –∫–æ–º–∞–Ω–¥–æ–π \`${guild.prefix}transport buy\`.`),
        );
        break;
      case 'add':
        if (!message.member.permissions.has('MANAGE_GUILD')) return message.fail('–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω–æ–≥–æ –¥–µ–π—Å—Ç–≤–∏—è.');
        const hasPremium = message.guild.cache.premium;
        // eslint-disable-next-line no-mixed-operators
        if (!hasPremium && guild.transport?.length >= 5 || hasPremium && guild.transport?.length >= 10) return message.fail(`–í—ã –¥–æ—Å—Ç–∏–≥–ª–∏ –ª–∏–º–∏—Ç–∞ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞ –Ω–∞ —ç—Ç–æ–º —Å–µ—Ä–≤–µ—Ä–µ. ${!hasPremium ? '–ü—Ä–∏–æ–±—Ä–µ—Ç–∏—Ç–µ Flame+ –¥–ª—è –ø–æ–≤—ã—à–µ–Ω–Ω—ã—Ö –ª–∏–º–∏—Ç–æ–≤.' : ''}`);

        // eslint-disable-next-line no-unused-vars
        const [_, name, key, price, requiredFor] = args;
        const allowedCommands = ['work', 'crime', 'mine', 'fish', 'chop'];

        if (!name) return message.fail('–£–∫–∞–∂–∏—Ç–µ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞.');
        if (name.length >= 20) return message.fail('–ù–∞–∑–≤–∞–Ω–∏–µ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞ –Ω–µ –¥–æ–ª–∂–Ω–æ —Å–æ–¥–µ—Ä–∂–∞—Ç—å –≤ —Å–µ–±–µ –±–æ–ª–µ–µ 20—Ç–∏ —Å–∏–º–≤–æ–ª–æ–≤.');

        if (!key) return message.fail('–£–∫–∞–∂–∏—Ç–µ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞.');
        if (key.length >= 10) return message.fail('–ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞ –Ω–µ –¥–æ–ª–∂–µ–Ω –ø—Ä–µ–≤—ã—à–∞—Ç—å –ª–∏–º–∏—Ç –≤ **10** —Å–∏–º–≤–æ–ª–æ–≤.');
        if (guild.transport?.find((t) => t.key === key)) return message.fail('–ù–∞ —ç—Ç–æ–º —Å–µ—Ä–≤–µ—Ä–µ —É–∂–µ –∏–º–µ–µ—Ç—Å—è —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç —Å —Ç–∞–∫–∏–º –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä–æ–º.');

        if (!price || isNaN(price) || !parseInt(price)) return message.fail('–£–∫–∞–∂–∏—Ç–µ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ —Å—Ç–æ–∏–º–æ—Å—Ç—å –¥–∞–Ω–Ω–æ–≥–æ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞.');
        if (parseInt(price) < 1 || parseInt(price) > 1000000) return message.fail('–°—Ç–æ–∏–º–æ—Å—Ç—å —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞ –Ω–µ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –º–µ–Ω—å—à–µ **1** –∏ –±–æ–ª—å—à–µ **1,000,000**.');

        if (requiredFor && !allowedCommands.includes(requiredFor)) return message.fail('–£–∫–∞–∑–∞–Ω–Ω–æ–π –∫–æ–º–∞–Ω–¥—ã –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –ª–∏–±–æ –æ–Ω–∞ –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ —Å —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–æ–º.');

        message.client.database.collection('guilds').updateOne({ guildID: message.guild.id }, {
          $push: {
            transport: {
              name,
              key,
              price,
              requiredFor: requiredFor ?? null,
            },
          },
        });
        message.channel.send(`${message.client.constants.emojis.DONE} –¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç **${name}** —Å –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä–æ–º **${key}**, —Å—Ç–æ–∏–º–æ—Å—Ç—å—é –≤ **${price}**${guild.currency} –±—ã–ª —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω.`);
        break;
      case 'remove':
        if (!message.member.permissions.has('MANAGE_GUILD')) return message.fail('–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω–æ–≥–æ –¥–µ–π—Å—Ç–≤–∏—è.');

        if (!args[1]) return message.fail('–£–∫–∞–∂–∏—Ç–µ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞, –∫–æ—Ç–æ—Ä—ã–π –≤—ã —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å.');
        if (!guild.transport?.find((t) => t.key === args[1])) return message.fail('–¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞ —Å —É–∫–∞–∑–∞–Ω–Ω—ã–º –≤–∞–º–∏ –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä–æ–º –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –Ω–∞ —Ä—ã–Ω–∫–µ –¥–∞–Ω–Ω–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞.');

        message.client.database.collection('guilds').updateOne({ guildID: message.guild.id }, {
          $pull: {
            transport: { key: args[1] },
          },
        });
        message.channel.send(`${message.client.constants.emojis.DONE} –¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç —Å –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä–æ–º **${args[1]}** –±—ã–ª —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω.`);
        break;
      case 'buy':
        if (!args[1]) return message.fail('–£–∫–∞–∂–∏—Ç–µ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞, –∫–æ—Ç–æ—Ä—ã–π –≤—ã —Ö–æ—Ç–∏—Ç–µ –∫—É–ø–∏—Ç—å.');
        const transport = guild.transport?.find((t) => t.key === args[1]);

        if (!transport) return message.fail('–£–∫–∞–∑–∞–Ω–Ω—ã–π –≤–∞–º–∏ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç –Ω–µ –±—ã–ª –Ω–∞–π–¥–µ–Ω –Ω–∞ —Ä—ã–Ω–∫–µ –¥–∞–Ω–Ω–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞.');
        if (transport.price > data.money) return message.fail('–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –¥–ª—è –ø–æ–∫—É–ø–∫–∏ –¥–∞–Ω–Ω–æ–≥–æ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞..');
        if (data.ownedTransport?.includes(transport.key)) return message.fail('–£ –≤–∞—Å —É–∂–µ –∏–º–µ–µ—Ç—Å—è —ç—Ç–æ—Ç —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç.');

        message.client.database.collection('guildusers').updateOne({ guildID: message.guild.id, userID: message.author.id }, {
          $inc: { money: -parseInt(transport.price) },
          $push: { ownedTransport: transport.key },
        });
        message.channel.send(`${message.client.constants.emojis.DONE} –í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–æ–±—Ä–µ–ª–∏ –¥–∞–Ω–Ω—ã–π –≤–∏–¥ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞ –∑–∞ **${transport.price}**${guild.currency}. ${transport.requiredFor ? `–û—Ç–Ω—ã–Ω–µ, –≤—ã —Å–º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –µ–≥–æ –¥–ª—è –∫–æ–º–∞–Ω–¥—ã \`${transport.requiredFor}\`.` : ''}`);
        break;
      default:
        getHelp(message, this.name);
    }
  }
}
module.exports = TransportCommand;
