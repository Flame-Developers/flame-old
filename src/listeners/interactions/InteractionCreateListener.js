const FlameListener = require('../../structures/FlameListener');
const InteractionResponse = require('../../utils/interactions/InteractionResponse');
const InteractionData = require('../../utils/interactions/InteractionData');
const GuildDataCache = require('../../structures/cache/GuildDataCache');

class InteractionCreateListener extends FlameListener {
  constructor() {
    super('InteractionCreateListener', {
      ws: true,
      event: 'INTERACTION_CREATE',
    });
  }

  async run(client, interaction) {
    switch (interaction.type) {
      case 2:
        const [data, callback] = [
          new InteractionData(client, interaction),
          new InteractionResponse(client, interaction),
        ];
        // We are also validating guild cache on slash command usage.
        if (!data.guild?.cache) {
          const guildData = await client.database.collection('guilds').findOne({ guildID: data.guild.id });
          data.guild.cache = new GuildDataCache(guildData);
        }
        try {
          const irn = client.interactions.get(interaction.data.name);

          if (irn) {
            if (irn.premium && !data.guild?.cache?.premium) {
              return callback.send(':star: –í—ã –Ω–∞—Ç–∫–Ω—É–ª–∏—Å—å –Ω–∞ –±–æ–Ω—É—Å–Ω—É—é –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å!\n–î–∞–Ω–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–¥–¥–µ—Ä–∂–∞–ª–∏ –Ω–∞—à –ø—Ä–æ–µ–∫—Ç –º–∞—Ç–µ—Ä–∏–∞–ª—å–Ω–æ. –ü–µ—Ä–µ–π–¥–∏—Ç–µ [—Å—é–¥–∞](https://docs.flamebot.ru/flame+) –¥–ª—è –ø–æ–¥—Ä–æ–±–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏.');
            }
            if (irn.category === 'music' && irn.djOnly && data.guild?.cache?.dj && !data.member.roles.cache.has(data.guild?.cache?.dj)) {
              return callback.send(`üö´ –í—ã –¥–æ–ª–∂–Ω—ã –∏–º–µ—Ç—å —Ä–æ–ª—å DJ'–µ—è (<@&${data.guild.cache.dj}>) —á—Ç–æ–±—ã —É–ø—Ä–∞–≤–ª—è—Ç—å –º—É–∑—ã–∫–∞–ª—å–Ω—ã–º –ø–ª–µ–µ—Ä–æ–º.`, { flags: 64 });
            }
            return irn.run(client, data);
          }
        } catch (err) {
          callback.send('üö´ –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∏–Ω—Ç–µ—Ä–∞–∫—Ü–∏–∏. –ü–æ—Å–µ—Ç–∏—Ç–µ [–¥–∞–Ω–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É](https://docs.flamebot.ru/faq) –¥–ª—è —Å–ø–∏—Å–∫–∞ –≤–æ–∑–º–æ–∂–Ω—ã—Ö –ø—Ä–∏—á–∏–Ω.');
          console.error(err);
        }
        break;
      case 3:
        if (client.cache.buttons.has(interaction.message.id)) {
          // eslint-disable-next-line max-len
          client.cache.buttons.get(interaction.message.id)(new InteractionData(client, interaction));
          return client.api.interactions(interaction.id, interaction.token)
            .callback.post({ data: { type: 6 } })
            .catch(() => {});
        }
    }
  }
}

module.exports = InteractionCreateListener;
