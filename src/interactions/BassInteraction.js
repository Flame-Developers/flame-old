const FlameInteraction = require('../structures/FlameInteraction');
const InteractionResponse = require('../utils/interactions/InteractionResponse');

class BassInteraction extends FlameInteraction {
  constructor() {
    super('bass');
  }

  run(client, interaction) {
    const callback = new InteractionResponse(client, interaction);

    if (!interaction.member.voice.channelID) return callback.send('–í—ã –¥–æ–ª–∂–Ω—ã –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –≥–æ–ª–æ—Å–æ–≤–æ–º –∫–∞–Ω–∞–ª–µ, –¥–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –¥–∞–Ω–Ω—É—é –∫–æ–º–∞–Ω–¥—É.', { flags: 64 });

    const player = client.players.get(interaction.guild?.id);
    if (!player) return callback.send('–ù–∞ –¥–∞–Ω–Ω–æ–º —Å–µ—Ä–≤–µ—Ä–µ –Ω–µ –∑–∞–ø—É—â–µ–Ω –º—É–∑—ã–∫–∞–ª—å–Ω—ã–π –ø–ª–µ–µ—Ä.', { flags: 64 });

    if (player?.connection.voiceConnection.voiceChannelID !== interaction.member.voice.channelID) {
      return callback.send(
        '–í—ã –¥–æ–ª–∂–Ω—ã –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –æ–¥–Ω–æ–º –∫–∞–Ω–∞–ª–µ —Å–æ –º–Ω–æ–π, –¥–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã —É–ø—Ä–∞–≤–ª—è—Ç—å –ø–ª–µ–µ—Ä–æ–º.',
        { flags: 64 },
      );
    }

    const { level } = interaction.options;
    const levels = {
      off: { name: '–ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π', gain: 0.0 },
      low: { name: '–ù–∏–∑–∫–∏–π', gain: 0.15 },
      medium: { name: '–°—Ä–µ–¥–Ω–∏–π', gain: 0.35 },
      high: { name: '–í—ã—Å–æ–∫–∏–π', gain: 1 },
      max: { name: '–ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π', gain: 2 },
    };

    player.connection
      .setEqualizer(Array(6).fill(0).map((n, i) => ({ band: i, gain: levels[level].gain })))
      .then(() => callback.send(`üéöÔ∏è –£—Ä–æ–≤–µ–Ω—å –±–∞—Å—Å–∞ –±—ã–ª —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –Ω–∞ **${levels[level].name}**. –ò–∑–º–µ–Ω–µ–Ω–∏—è –ø—Ä–∏–º–µ–Ω—è—Ç—Å—è —á–µ—Ä–µ–∑ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–µ–∫—É–Ω–¥.`));
  }
}

module.exports = BassInteraction;
